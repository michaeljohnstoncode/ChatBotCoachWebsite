@using ChatBotCoachWebsite.Areas.Identity.Pages.Account;
@using Microsoft.AspNetCore.Identity
@using ChatBotCoachWebsite.Areas.Identity.Data

@inject SignInManager<ChatBotCoachWebsiteUser> SignInManager
@inject UserManager<ChatBotCoachWebsiteUser> UserManager
<head>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <!-- Register modal -->
            <button type="button" class="btn btn-outline-light" data-bs-toggle="modal" data-bs-target="#registerModal"
                    data-url="/Identity/Account/Register" data-title="Register" data-force-reload="true">
                Register
            </button>
    </li>
    <li class="nav-item">
            <!-- Login modal -->
            <button type="button" class="btn btn-outline-light" data-bs-toggle="modal" data-bs-target="#loginModal"
                    data-url="/Identity/Account/Login" data-title="Log in" data-force-reload="true">
                Login
            </button>
    </li>
}
</ul>
